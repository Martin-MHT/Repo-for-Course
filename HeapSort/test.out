Comparison Between Custom Heapsort and std::sort_heap with Size = 3000000
---------- Random Array ----------
Sorting Random Array with Custom HeapSort : Correct with time cost 249921 microseconds
Sorting Random Array with std::sort_heap : Correct with time cost 250236 microseconds
Sorting Random Array with Custom HeapSort : Correct with time cost 249240 microseconds
Sorting Random Array with std::sort_heap : Correct with time cost 245873 microseconds
Sorting Random Array with Custom HeapSort : Correct with time cost 256038 microseconds
Sorting Random Array with std::sort_heap : Correct with time cost 246525 microseconds
Sorting Random Array with Custom HeapSort : Correct with time cost 247292 microseconds
Sorting Random Array with std::sort_heap : Correct with time cost 247670 microseconds
Sorting Random Array with Custom HeapSort : Correct with time cost 251112 microseconds
Sorting Random Array with std::sort_heap : Correct with time cost 246781 microseconds
For Random Array tests, the average time cost are as follows: 
Custom heapsort : 250720 microseconds
Std Heapsort : 247417 microseconds
---------- Ordered Array ----------
Sorting Ordered Array with Custom HeapSort : Correct with time cost 102072 microseconds
Sorting Ordered Array with std::sort_heap : Correct with time cost 107529 microseconds
Sorting Ordered Array with Custom HeapSort : Correct with time cost 101689 microseconds
Sorting Ordered Array with std::sort_heap : Correct with time cost 107956 microseconds
Sorting Ordered Array with Custom HeapSort : Correct with time cost 103210 microseconds
Sorting Ordered Array with std::sort_heap : Correct with time cost 105491 microseconds
Sorting Ordered Array with Custom HeapSort : Correct with time cost 102306 microseconds
Sorting Ordered Array with std::sort_heap : Correct with time cost 110508 microseconds
Sorting Ordered Array with Custom HeapSort : Correct with time cost 103457 microseconds
Sorting Ordered Array with std::sort_heap : Correct with time cost 108900 microseconds
For Ordered Array tests, the average time costs are as follows: 
Custom heapsort : 102546 microseconds
Std Heapsort : 108076 microseconds
---------- Reversed Array ----------
Sorting Reversed Array with Custom HeapSort : Correct with time cost 111486 microseconds
Sorting Reversed Array with std::sort_heap : Correct with time cost 121468 microseconds
Sorting Reversed Array with Custom HeapSort : Correct with time cost 112135 microseconds
Sorting Reversed Array with std::sort_heap : Correct with time cost 118015 microseconds
Sorting Reversed Array with Custom HeapSort : Correct with time cost 111330 microseconds
Sorting Reversed Array with std::sort_heap : Correct with time cost 119277 microseconds
Sorting Reversed Array with Custom HeapSort : Correct with time cost 112019 microseconds
Sorting Reversed Array with std::sort_heap : Correct with time cost 118029 microseconds
Sorting Reversed Array with Custom HeapSort : Correct with time cost 111173 microseconds
Sorting Reversed Array with std::sort_heap : Correct with time cost 117186 microseconds
For Reversed Array tests, the average time costs are as follows: 
Custom heapsort : 111628 microseconds
Std Heapsort : 118795 microseconds
---------- SingleRepetitiveArray ----------
Sorting SingleRepetitiveArray with Custom HeapSort : Correct with time cost 109434 microseconds
Sorting SingleRepetitiveArray with std::sort_heap : Correct with time cost 134713 microseconds
Sorting SingleRepetitiveArray with Custom HeapSort : Correct with time cost 111025 microseconds
Sorting SingleRepetitiveArray with std::sort_heap : Correct with time cost 134577 microseconds
Sorting SingleRepetitiveArray with Custom HeapSort : Correct with time cost 106819 microseconds
Sorting SingleRepetitiveArray with std::sort_heap : Correct with time cost 133398 microseconds
Sorting SingleRepetitiveArray with Custom HeapSort : Correct with time cost 107386 microseconds
Sorting SingleRepetitiveArray with std::sort_heap : Correct with time cost 132047 microseconds
Sorting SingleRepetitiveArray with Custom HeapSort : Correct with time cost 107553 microseconds
Sorting SingleRepetitiveArray with std::sort_heap : Correct with time cost 132905 microseconds
For SingleRepetitiveArray tests, the average time costs are as follows: 
Custom heapsort : 108443 microseconds
Std Heapsort : 133528 microseconds
---------- MultiRepetitiveArray ----------
Sorting MultiRepetitiveArray with Custom HeapSort : Correct with time cost 138178 microseconds
Sorting MultiRepetitiveArray with std::sort_heap : Correct with time cost 148176 microseconds
Sorting MultiRepetitiveArray with Custom HeapSort : Correct with time cost 141854 microseconds
Sorting MultiRepetitiveArray with std::sort_heap : Correct with time cost 153982 microseconds
Sorting MultiRepetitiveArray with Custom HeapSort : Correct with time cost 134677 microseconds
Sorting MultiRepetitiveArray with std::sort_heap : Correct with time cost 150933 microseconds
Sorting MultiRepetitiveArray with Custom HeapSort : Correct with time cost 145003 microseconds
Sorting MultiRepetitiveArray with std::sort_heap : Correct with time cost 153936 microseconds
Sorting MultiRepetitiveArray with Custom HeapSort : Correct with time cost 139345 microseconds
Sorting MultiRepetitiveArray with std::sort_heap : Correct with time cost 153636 microseconds
For MultiRepetitiveArray tests, the average time costs are as follows: 
Custom heapsort : 139811 microseconds
Std Heapsort : 152132 microseconds
